// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Modal /> renders correct with close button and customClasses 1`] = `
<div
  className="test-overlay overlay-default"
  onMouseDown={[Function]}
  onMouseUp={[Function]}
>
  <Popup
    additionalClass="test-modal modal-default"
  >
    <CrossSVG
      className="test-close close-default"
    />
    Test modal content
  </Popup>
</div>
`;

exports[`<Modal /> renders correct without close button and customClasses 1`] = `
<div
  className="overlay-default"
  onMouseDown={[Function]}
  onMouseUp={[Function]}
>
  <Popup
    additionalClass="modal-default"
  >
    Test modal content
  </Popup>
</div>
`;

exports[`<Modal /> should handle extended props 1`] = `
<Modal
  extended={true}
  footer={
    <button>
      Hello
    </button>
  }
  onClose={[MockFunction]}
  subtitle="Subtitle"
  title="Title"
  topBarProps={
    Object {
      "size": "m",
    }
  }
  withCloseButton={true}
  withDivideFooter={true}
  withDivideTopBar={true}
>
  <div
    className="overlay-extended"
    onMouseDown={[Function]}
    onMouseUp={[Function]}
  >
    <Popup
      additionalClass="modal-extended"
    >
      <div
        className="popup modal-extended"
      >
        <TopBar
          buttonsProps={
            Object {
              "end": Object {
                "icon": <CrossSVG
                  className="cursor-pointer"
                />,
                "onClick": [MockFunction],
              },
            }
          }
          className="header divided"
          size="m"
          subtitle="Subtitle"
          title="Title"
        >
          <div
            className="modal-header size-m header divided"
          >
            <div
              className="icon-button"
            />
            <div
              className="main-section"
            >
              <div
                className="title ellipsis"
              >
                Title
              </div>
              <div
                className="subtitle ellipsis"
              >
                Subtitle
              </div>
            </div>
            <IconButton
              icon={
                <CrossSVG
                  className="cursor-pointer"
                />
              }
              onClick={[MockFunction]}
            >
              <button
                className="icon-button"
                onClick={[MockFunction]}
                type="button"
              >
                <CrossSVG
                  className="cursor-pointer"
                >
                  <svg
                    className="cursor-pointer"
                    height={24}
                    viewBox="0 0 24 24"
                    width={24}
                  >
                    <path
                      clipRule="evenodd"
                      d="M4.293 19.707a1 1 0 001.414 0L12 13.414l6.293 6.293a1 1 0 001.414-1.414L13.414 12l6.293-6.293a1 1 0 00-1.414-1.414L12 10.586 5.707 4.293a1 1 0 00-1.414 1.414L10.586 12l-6.293 6.293a1 1 0 000 1.414z"
                      fillRule="evenodd"
                    />
                  </svg>
                </CrossSVG>
              </button>
            </IconButton>
          </div>
        </TopBar>
        <div
          className="footer divided"
        >
          <button>
            Hello
          </button>
        </div>
      </div>
    </Popup>
  </div>
</Modal>
`;

exports[`<Modal /> should handle extended props 2`] = `
<Modal
  extended={true}
  footer={
    <button>
      Hello
    </button>
  }
  onClose={[MockFunction]}
  subtitle="Subtitle"
  title="Title"
  topBarProps={
    Object {
      "size": "m",
    }
  }
  withCloseButton={false}
  withDivideFooter={true}
  withDivideTopBar={true}
>
  <div
    className="overlay-extended"
    onMouseDown={[Function]}
    onMouseUp={[Function]}
  >
    <Popup
      additionalClass="modal-extended"
    >
      <div
        className="popup modal-extended"
      >
        <TopBar
          buttonsProps={
            Object {
              "end": Object {
                "icon": null,
                "onClick": [MockFunction],
              },
            }
          }
          className="header divided"
          size="m"
          subtitle="Subtitle"
          title="Title"
        >
          <div
            className="modal-header size-m header divided"
          >
            <div
              className="icon-button"
            />
            <div
              className="main-section"
            >
              <div
                className="title ellipsis"
              >
                Title
              </div>
              <div
                className="subtitle ellipsis"
              >
                Subtitle
              </div>
            </div>
            <IconButton
              icon={null}
              onClick={[MockFunction]}
            >
              <button
                className="icon-button"
                onClick={[MockFunction]}
                type="button"
              />
            </IconButton>
          </div>
        </TopBar>
        <div
          className="footer divided"
        >
          <button>
            Hello
          </button>
        </div>
      </div>
    </Popup>
  </div>
</Modal>
`;
