@import '../variables';

/* Выравнивания по горизонтали */
$justifies: (
  'start': flex-start,
  'end': flex-end,
  'center': center,
  'between': space-between,
  'around': space-around,
);

/** Выравнивания по вертикали*/
$alignments: (
  'start': flex-start,
  'end': flex-end,
  'center': center,
  'stretch': stretch,
  'baseline': baseline,
);

/* Параметры для создания отступов между колонками
 * Правило для медиа-запроса| Брейкпоинт | Половина размера отступа между колонками
 */
$gutters: (
  'min-width' $extraLargeMobileBreakpoint + 1px 16px,
  'max-width' $extraLargeMobileBreakpoint 12px,
  'max-width' $mediumMobileBreakpoint 8px,
);

/* Миксин для создания отступов между колонками */
@mixin create-gutters {
  @each $rule, $breakpoint, $gutter in $gutters {
    @media ($rule: $breakpoint) {
      margin-right: -$gutter;
      margin-left: -$gutter;
      .col {
        padding: 0 $gutter;
      }
    }
  }
}
/* Параметры для вычисления ширины колонок
 * Правило для медиа-запроса| Брейкпоинт | Префикс для названия класса | Количество колонок
 */
$columns: (
  'min-width' $extraLargeMobileBreakpoint + 1px  'lg' 12,
  'max-width' $extraLargeMobileBreakpoint  'md' 8,
);


/* Миксин для создания классов с шириной колонок */
@mixin create-columns-width {
  @each $rule, $breakpoint, $sizeName, $columnCount in $columns {
    @media ($rule: $breakpoint) {
      &.#{$sizeName}-auto-#{$columnCount} {
        flex: 1 1 0;
        max-width: 100%;
      }
      @for $key from 1 through $columnCount {
        $width: 100%  / $columnCount * $key;
        &.#{$sizeName}-#{$key}-#{$columnCount} {
          flex: 0 1 $width;
          max-width: $width;
        }
      }
    }
  }
}

.row {
  width: auto;
  display: flex;
  flex-direction: row;
  .col {
    box-sizing: border-box;
    @include create-columns-width;
  }
  &.with-gutters {
    @include create-gutters;
  }
  &.wrap {
    flex-wrap: wrap;
  }
  @each $key, $value in $justifies {
    &.justify-#{$key} {
      justify-content: $value;
    }
  }
  @each $key, $value in $alignments {
    &.items-#{$key} {
      align-items: $value;
    }
  }
}
