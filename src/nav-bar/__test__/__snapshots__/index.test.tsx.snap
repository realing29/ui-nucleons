// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NavBar /> should handle "bottomBordered" prop 1`] = `
<NavBar
  bottomBordered={true}
  subtitle="World"
  title="Hello"
>
  <div
    className="nav-bar inner-border-bottom"
  >
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Hello
      </div>
      <div
        className="subtitle truncate"
      >
        World
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render end icon-button 1`] = `
<NavBar
  buttons={
    Object {
      "end": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon stub"
            type="button"
          />
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
        >
          <button
            aria-hidden={false}
            className="button icon"
            type="button"
          >
            <ForwardRef(ArrowLeftSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  d="M5.414 13l5.293 5.293a1 1 0 01-1.414 1.414l-7-7a1 1 0 010-1.414l7-7a1 1 0 011.414 1.414L5.414 11H21a1 1 0 110 2H5.414z"
                />
              </svg>
            </ForwardRef(ArrowLeftSVG)>
          </button>
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render end link-button 1`] = `
<NavBar
  buttons={
    Object {
      "end": Object {
        "text": "Bar",
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          stub={true}
          text="Bar"
        >
          <button
            aria-hidden={true}
            className="button stub"
            type="button"
          >
            Bar
          </button>
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          text="Bar"
        >
          <button
            aria-hidden={false}
            className="button"
            type="button"
          >
            Bar
          </button>
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render end secondary link-button 1`] = `
<NavBar
  buttons={
    Object {
      "endSecondary": Object {
        "text": "Bar",
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          stub={true}
          text="Bar"
        >
          <button
            aria-hidden={true}
            className="button stub"
            type="button"
          >
            Bar
          </button>
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          text="Bar"
        >
          <button
            aria-hidden={false}
            className="button"
            type="button"
          >
            Bar
          </button>
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render four icon-buttons 1`] = `
<NavBar
  buttons={
    Object {
      "end": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
      "endSecondary": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
      "start": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
      "startSecondary": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          shift="right"
        >
          <button
            aria-hidden={false}
            className="button icon shift-right"
            type="button"
          >
            <ForwardRef(ArrowLeftSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  d="M5.414 13l5.293 5.293a1 1 0 01-1.414 1.414l-7-7a1 1 0 010-1.414l7-7a1 1 0 011.414 1.414L5.414 11H21a1 1 0 110 2H5.414z"
                />
              </svg>
            </ForwardRef(ArrowLeftSVG)>
          </button>
        </NavButton>
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          shift="left"
        >
          <button
            aria-hidden={false}
            className="button icon shift-left"
            type="button"
          >
            <ForwardRef(CartSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  clipRule="evenodd"
                  d="M0 3a1 1 0 011-1h3a1 1 0 01.956.706L8.739 15h9.48l1.5-6H10a1 1 0 110-2h11a1 1 0 01.97 1.243l-2 8A1 1 0 0119 17H8a1 1 0 01-.956-.706L3.261 4H1a1 1 0 01-1-1z"
                  fillRule="evenodd"
                />
                <path
                  d="M12 21a2 2 0 11-4 0 2 2 0 014 0zM19 21a2 2 0 11-4 0 2 2 0 014 0z"
                />
              </svg>
            </ForwardRef(CartSVG)>
          </button>
        </NavButton>
      </div>
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          shift="right"
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon shift-right stub"
            type="button"
          />
        </NavButton>
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          shift="left"
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon shift-left stub"
            type="button"
          />
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          shift="right"
        >
          <button
            aria-hidden={false}
            className="button icon shift-right"
            type="button"
          >
            <ForwardRef(PersonSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  clipRule="evenodd"
                  d="M11.88 1C8.723 1 6.356 3.887 6.975 6.98l.455 2.274a4.66 4.66 0 009.138 0l.455-2.273C17.642 3.887 15.276 1 12.12 1h-.242zM8.936 6.588A3 3 0 0111.88 3h.242a3 3 0 012.941 3.588l-.454 2.274a2.66 2.66 0 01-5.216 0l-.455-2.274z"
                  fillRule="evenodd"
                />
                <path
                  d="M7.214 14.977a1 1 0 00-.428-1.954c-2.223.486-3.462 1.496-4.123 2.508a4.205 4.205 0 00-.573 1.311 3.43 3.43 0 00-.09.626c-.009.51 0 1.021 0 1.532a3 3 0 003 3h14a3 3 0 003-3c0-.51.007-1.021 0-1.532l-.002-.048a3.449 3.449 0 00-.088-.578 4.203 4.203 0 00-.573-1.31c-.66-1.013-1.9-2.023-4.123-2.509a1 1 0 10-.428 1.954c1.777.389 2.538 1.129 2.877 1.648.178.272.262.518.302.685a1.44 1.44 0 01.035.203V19a1 1 0 01-1 1H5a1 1 0 01-1-1v-1.484l.002-.025c.004-.035.013-.097.033-.18.04-.168.124-.414.302-.686.34-.52 1.1-1.26 2.877-1.648z"
                />
              </svg>
            </ForwardRef(PersonSVG)>
          </button>
        </NavButton>
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          shift="left"
        >
          <button
            aria-hidden={false}
            className="button icon shift-left"
            type="button"
          >
            <ForwardRef(CrossSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  clipRule="evenodd"
                  d="M4.293 19.707a1 1 0 001.414 0L12 13.414l6.293 6.293a1 1 0 001.414-1.414L13.414 12l6.293-6.293a1 1 0 00-1.414-1.414L12 10.586 5.707 4.293a1 1 0 00-1.414 1.414L10.586 12l-6.293 6.293a1 1 0 000 1.414z"
                  fillRule="evenodd"
                />
              </svg>
            </ForwardRef(CrossSVG)>
          </button>
        </NavButton>
      </div>
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          shift="right"
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon shift-right stub"
            type="button"
          />
        </NavButton>
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          shift="left"
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon shift-left stub"
            type="button"
          />
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render icon-buttons 1`] = `
<NavBar
  buttons={
    Object {
      "end": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
      "start": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
        >
          <button
            aria-hidden={false}
            className="button icon"
            type="button"
          >
            <ForwardRef(ArrowLeftSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  d="M5.414 13l5.293 5.293a1 1 0 01-1.414 1.414l-7-7a1 1 0 010-1.414l7-7a1 1 0 011.414 1.414L5.414 11H21a1 1 0 110 2H5.414z"
                />
              </svg>
            </ForwardRef(ArrowLeftSVG)>
          </button>
        </NavButton>
      </div>
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon stub"
            type="button"
          />
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
        >
          <button
            aria-hidden={false}
            className="button icon"
            type="button"
          >
            <ForwardRef(CrossSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  clipRule="evenodd"
                  d="M4.293 19.707a1 1 0 001.414 0L12 13.414l6.293 6.293a1 1 0 001.414-1.414L13.414 12l6.293-6.293a1 1 0 00-1.414-1.414L12 10.586 5.707 4.293a1 1 0 00-1.414 1.414L10.586 12l-6.293 6.293a1 1 0 000 1.414z"
                  fillRule="evenodd"
                />
              </svg>
            </ForwardRef(CrossSVG)>
          </button>
        </NavButton>
      </div>
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon stub"
            type="button"
          />
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render just title and subtitle 1`] = `
<NavBar
  subtitle="World"
  title="Hello"
>
  <div
    className="nav-bar"
  >
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Hello
      </div>
      <div
        className="subtitle truncate"
      >
        World
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render link-buttons 1`] = `
<NavBar
  buttons={
    Object {
      "end": Object {
        "text": "Bar",
      },
      "start": Object {
        "text": "Foo",
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          text="Foo"
        >
          <button
            aria-hidden={false}
            className="button"
            type="button"
          >
            Foo
          </button>
        </NavButton>
      </div>
      <div
        className="group"
      >
        <NavButton
          stub={true}
          text="Bar"
        >
          <button
            aria-hidden={true}
            className="button stub"
            type="button"
          >
            Bar
          </button>
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          text="Bar"
        >
          <button
            aria-hidden={false}
            className="button"
            type="button"
          >
            Bar
          </button>
        </NavButton>
      </div>
      <div
        className="group"
      >
        <NavButton
          stub={true}
          text="Foo"
        >
          <button
            aria-hidden={true}
            className="button stub"
            type="button"
          >
            Foo
          </button>
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render mixed buttons 1`] = `
<NavBar
  buttons={
    Object {
      "end": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
      "start": Object {
        "text": "Foo",
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          text="Foo"
        >
          <button
            aria-hidden={false}
            className="button"
            type="button"
          >
            Foo
          </button>
        </NavButton>
      </div>
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon stub"
            type="button"
          />
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
        >
          <button
            aria-hidden={false}
            className="button icon"
            type="button"
          >
            <ForwardRef(CrossSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  clipRule="evenodd"
                  d="M4.293 19.707a1 1 0 001.414 0L12 13.414l6.293 6.293a1 1 0 001.414-1.414L13.414 12l6.293-6.293a1 1 0 00-1.414-1.414L12 10.586 5.707 4.293a1 1 0 00-1.414 1.414L10.586 12l-6.293 6.293a1 1 0 000 1.414z"
                  fillRule="evenodd"
                />
              </svg>
            </ForwardRef(CrossSVG)>
          </button>
        </NavButton>
      </div>
      <div
        className="group"
      >
        <NavButton
          stub={true}
          text="Foo"
        >
          <button
            aria-hidden={true}
            className="button stub"
            type="button"
          >
            Foo
          </button>
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render start icon-button 1`] = `
<NavBar
  buttons={
    Object {
      "start": Object {
        "icon": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
        >
          <button
            aria-hidden={false}
            className="button icon"
            type="button"
          >
            <ForwardRef(ArrowLeftSVG)
              aria-hidden="true"
              fill="#212121"
            >
              <svg
                aria-hidden="true"
                fill="#212121"
                height={24}
                viewBox="0 0 24 24"
                width={24}
              >
                <path
                  d="M5.414 13l5.293 5.293a1 1 0 01-1.414 1.414l-7-7a1 1 0 010-1.414l7-7a1 1 0 011.414 1.414L5.414 11H21a1 1 0 110 2H5.414z"
                />
              </svg>
            </ForwardRef(ArrowLeftSVG)>
          </button>
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          icon={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          stub={true}
        >
          <button
            aria-hidden={true}
            className="button icon stub"
            type="button"
          />
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render start link-button 1`] = `
<NavBar
  buttons={
    Object {
      "start": Object {
        "text": "Foo",
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          text="Foo"
        >
          <button
            aria-hidden={false}
            className="button"
            type="button"
          >
            Foo
          </button>
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          stub={true}
          text="Foo"
        >
          <button
            aria-hidden={true}
            className="button stub"
            type="button"
          >
            Foo
          </button>
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;

exports[`<NavBar /> should render start secondary link-button 1`] = `
<NavBar
  buttons={
    Object {
      "startSecondary": Object {
        "text": "Foo",
      },
    }
  }
  subtitle="Очень очень очень очень длинный подзаголовок"
  title="Очень очень очень длинный заголовок"
>
  <div
    className="nav-bar"
  >
    <div
      className="button-groups"
    >
      <div
        className="group"
      >
        <NavButton
          text="Foo"
        >
          <button
            aria-hidden={false}
            className="button"
            type="button"
          >
            Foo
          </button>
        </NavButton>
      </div>
    </div>
    <div
      className="main"
    >
      <div
        className="title truncate"
      >
        Очень очень очень длинный заголовок
      </div>
      <div
        className="subtitle truncate"
      >
        Очень очень очень очень длинный подзаголовок
      </div>
    </div>
    <div
      className="button-groups end"
    >
      <div
        className="group"
      >
        <NavButton
          stub={true}
          text="Foo"
        >
          <button
            aria-hidden={true}
            className="button stub"
            type="button"
          >
            Foo
          </button>
        </NavButton>
      </div>
    </div>
  </div>
</NavBar>
`;
