// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BaseInput /> should handle "restPlaceholder" prop 1`] = `
<ForwardRef(BaseInput)
  onChange={[MockFunction]}
  restPlaceholder=", World!"
  value="Hello"
>
  <div
    className="reset root"
    data-testid="base-input:root"
  >
    <span
      aria-hidden={true}
      className="fake-text"
    >
      <span
        className="invisible-value"
      >
        Hello
      </span>
      <span
        className="placeholder"
      >
        , World!
      </span>
    </span>
    <input
      className="field reset"
      data-testid="base-input:field"
      onChange={[MockFunction]}
      onInput={[Function]}
      value="Hello"
    />
  </div>
</ForwardRef(BaseInput)>
`;

exports[`<BaseInput /> should handle "restPlaceholder" prop 2`] = `
<ForwardRef(BaseInput)
  onChange={[MockFunction]}
  restPlaceholder={
    {
      "shiftValue": "Hello",
      "value": ", World!",
    }
  }
  value=""
>
  <div
    className="reset root"
    data-testid="base-input:root"
  >
    <span
      aria-hidden={true}
      className="fake-text"
    >
      <span
        className="invisible-value"
      >
        Hello
      </span>
      <span
        className="placeholder"
      >
        , World!
      </span>
    </span>
    <input
      className="field reset"
      data-testid="base-input:field"
      onChange={[MockFunction]}
      onInput={[Function]}
      value=""
    />
  </div>
</ForwardRef(BaseInput)>
`;

exports[`<BaseInput /> should render without props 1`] = `
<ForwardRef(BaseInput)>
  <div
    className="reset root"
    data-testid="base-input:root"
  >
    <input
      className="field reset"
      data-testid="base-input:field"
      onInput={[Function]}
    />
  </div>
</ForwardRef(BaseInput)>
`;
