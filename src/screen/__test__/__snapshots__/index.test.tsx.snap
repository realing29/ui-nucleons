// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Screen /> should handle "loading/loadingOverlayProps" props 1`] = `
<Screen
  loading={true}
  loadingOverlayProps={
    Object {
      "spinnerProps": Object {
        "size": "medium",
      },
    }
  }
>
  <div
    className="root"
    data-testid="screen"
    style={
      Object {
        "zIndex": 300,
      }
    }
  >
    <LoadingOverlay
      spinnerProps={
        Object {
          "size": "medium",
        }
      }
    >
      <div
        className="loading-overlay fill"
      >
        <Spinner
          size="medium"
        >
          <div>
            <svg
              className="spinner size-medium"
              height={48}
              stroke="#1f84db"
              viewBox="0 0 48 48"
              width={48}
            >
              <circle
                className="circle"
                cx={24}
                cy={24}
                r={23}
              />
            </svg>
          </div>
        </Spinner>
      </div>
    </LoadingOverlay>
  </div>
</Screen>
`;

exports[`<Screen /> should handle "loadingArea" prop 1`] = `
<Screen
  loading={true}
  loadingArea="content"
>
  <div
    className="root"
    data-testid="screen"
    style={
      Object {
        "zIndex": 300,
      }
    }
  >
    <HeaderSlot
      divided={true}
      key=".0"
      subtitle="Subtitle"
      title="Title"
    >
      <NavBar
        bottomBordered={true}
        buttons={
          Object {
            "end": undefined,
            "start": undefined,
          }
        }
        subtitle="Subtitle"
        title="Title"
      >
        <div
          className="nav-bar inner-border-bottom"
          style={
            Object {
              "height": "56px",
            }
          }
        >
          <div
            className="main"
          >
            <div
              className="title truncate"
            >
              Title
            </div>
            <div
              className="subtitle truncate"
            >
              Subtitle
            </div>
          </div>
        </div>
      </NavBar>
    </HeaderSlot>
    <ForwardRef>
      <div
        className="body"
        data-testid="screen:body"
      >
        <LoadingOverlay
          fill={false}
          style={
            Object {
              "height": "100%",
            }
          }
        >
          <div
            className="loading-overlay"
            style={
              Object {
                "height": "100%",
              }
            }
          >
            <Spinner>
              <div>
                <svg
                  className="spinner size-medium"
                  height={48}
                  stroke="#1f84db"
                  viewBox="0 0 48 48"
                  width={48}
                >
                  <circle
                    className="circle"
                    cx={24}
                    cy={24}
                    r={23}
                  />
                </svg>
              </div>
            </Spinner>
          </div>
        </LoadingOverlay>
      </div>
    </ForwardRef>
    <FooterSlot
      key=".2"
    >
      <div
        className="footer"
        data-testid="screen:footer"
      >
        <p>
          Footer content
        </p>
      </div>
    </FooterSlot>
  </div>
</Screen>
`;

exports[`<Screen /> should renders correctly 1`] = `
<Screen>
  <div
    className="root"
    data-testid="screen"
    style={
      Object {
        "zIndex": 300,
      }
    }
  >
    <HeaderSlot
      divided={true}
      key=".0"
      subtitle="Subtitle"
      title="Title"
    >
      <NavBar
        bottomBordered={true}
        buttons={
          Object {
            "end": undefined,
            "start": undefined,
          }
        }
        subtitle="Subtitle"
        title="Title"
      >
        <div
          className="nav-bar inner-border-bottom"
          style={
            Object {
              "height": "56px",
            }
          }
        >
          <div
            className="main"
          >
            <div
              className="title truncate"
            >
              Title
            </div>
            <div
              className="subtitle truncate"
            >
              Subtitle
            </div>
          </div>
        </div>
      </NavBar>
    </HeaderSlot>
    <ForwardRef
      key=".1"
    >
      <div
        className="body"
        data-testid="screen:body"
      >
        <p>
          Body
        </p>
      </div>
    </ForwardRef>
    <FooterSlot
      key=".2"
    >
      <div
        className="footer"
        data-testid="screen:footer"
      >
        <p>
          Footer
        </p>
      </div>
    </FooterSlot>
  </div>
</Screen>
`;

exports[`<Screen /> should renders without close button 1`] = `
<Screen>
  <div
    className="root"
    data-testid="screen"
    style={
      Object {
        "zIndex": 300,
      }
    }
  >
    <HeaderSlot
      buttons={
        Object {
          "end": Object {
            "text": "cross replacer",
          },
        }
      }
      key=".0"
    >
      <NavBar
        buttons={
          Object {
            "end": Object {
              "text": "cross replacer",
            },
            "start": undefined,
          }
        }
      >
        <div
          className="nav-bar"
          style={
            Object {
              "height": "56px",
            }
          }
        >
          <div
            className="button-groups"
          >
            <div
              className="group"
            >
              <NavButton
                stub={true}
                text="cross replacer"
              >
                <button
                  aria-hidden={true}
                  className="button stub"
                  type="button"
                >
                  cross replacer
                </button>
              </NavButton>
            </div>
          </div>
          <div
            className="main"
          />
          <div
            className="button-groups end"
          >
            <div
              className="group"
            >
              <NavButton
                text="cross replacer"
              >
                <button
                  aria-hidden={false}
                  className="button"
                  type="button"
                >
                  cross replacer
                </button>
              </NavButton>
            </div>
          </div>
        </div>
      </NavBar>
    </HeaderSlot>
  </div>
</Screen>
`;
